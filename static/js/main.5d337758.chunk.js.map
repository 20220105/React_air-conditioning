{"version":3,"sources":["utils/soundEffect.ts","components/UI/Button.tsx","App.tsx","utils/constants.ts","GlobalStyle.ts","index.tsx"],"names":["prevIntervalId","Button","styled","button","ButtonSoundEffect","Audio","OnSoundEffect","OffSoundEffect","AirConditionerSoundEffect","Root","div","AirConditioner","ButtonGroup","Temperature","disabled","TemperatureSymbol","Power","open","PowerButton","AddButton","MinusButton","AirOutlet","Shutter","App","useState","isOpen","setIsOpen","temperature","setTemperature","audioContextRef","useRef","useEffect","audioContext","window","AudioContext","webkitAudioContext","source","createMediaElementSource","connect","destination","current","disconnect","close","onClick","audio","play","clearInterval","Promise","res","rej","intervalId","setInterval","volume","Number","toFixed","then","suspend","resume","paused","loop","volumeFadeIn","currentTime","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d337758.chunk.js","sourcesContent":["export const ButtonSoundEffect = new Audio(\"/assets/sound_effect/button.mp3\");\r\nexport const OnSoundEffect = new Audio(\"/assets/sound_effect/on.mp3\");\r\nexport const OffSoundEffect = new Audio(\"/assets/sound_effect/off.mp3\");\r\nexport const AirConditionerSoundEffect = new Audio(\r\n  \"/assets/sound_effect/air_conditioner.ogg\"\r\n);\r\n\r\nlet prevIntervalId: number;\r\n\r\nexport const volumeFadeIn = (audio: HTMLAudioElement) => {\r\n  return new Promise<void>((res, rej) => {\r\n    clearInterval(prevIntervalId);\r\n    const intervalId = window.setInterval(() => {\r\n      if (audio.volume >= 1) {\r\n        clearInterval(intervalId);\r\n        res();\r\n        return;\r\n      }\r\n\r\n      audio.volume = Number(audio.volume.toFixed(2)) + 0.01;\r\n    }, 50);\r\n    prevIntervalId = intervalId;\r\n  });\r\n};\r\n\r\nexport const volumeFadeOut = (audio: HTMLAudioElement) => {\r\n  clearInterval(prevIntervalId);\r\n  return new Promise<void>((res, rej) => {\r\n    const intervalId = window.setInterval(() => {\r\n      if (audio.volume <= 0) {\r\n        clearInterval(intervalId);\r\n        res();\r\n        return;\r\n      }\r\n\r\n      audio.volume = Number(audio.volume.toFixed(2)) - 0.01;\r\n    }, 40);\r\n    prevIntervalId = intervalId;\r\n  });\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  font-size: 24px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f2f2f2;\r\n  border: none;\r\n  border-radius: 99em;\r\n  outline: none;\r\n  box-shadow: 2px 2px 6px lightgray;\r\n  user-select: none;\r\n\r\n  &:active {\r\n    box-shadow: inset 2px 2px 6px lightgray;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import { Button } from \"components/UI\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { powerOnTime } from \"utils/constants\";\r\nimport {\r\n  ButtonSoundEffect,\r\n  OnSoundEffect,\r\n  OffSoundEffect,\r\n  AirConditionerSoundEffect,\r\n  volumeFadeIn,\r\n  volumeFadeOut,\r\n} from \"utils/soundEffect\";\r\n\r\nfunction App() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [temperature, setTemperature] = useState(23);\r\n\r\n  const audioContextRef = useRef<AudioContext>();\r\n\r\n  const add = () => {\r\n    if (!isOpen) return;\r\n\r\n    ButtonSoundEffect.currentTime = 0;\r\n    ButtonSoundEffect.play();\r\n    setTemperature(temperature + 1);\r\n  };\r\n\r\n  const minus = () => {\r\n    if (!isOpen) return;\r\n\r\n    ButtonSoundEffect.currentTime = 0;\r\n    ButtonSoundEffect.play();\r\n    setTemperature(temperature - 1);\r\n  };\r\n\r\n  const toggleOpen = () => {\r\n    if (isOpen) {\r\n      OffSoundEffect.play();\r\n      setIsOpen(false);\r\n      volumeFadeOut(AirConditionerSoundEffect).then(() => {\r\n        audioContextRef.current?.suspend();\r\n      });\r\n      return;\r\n    }\r\n\r\n    OnSoundEffect.play();\r\n    audioContextRef.current?.resume();\r\n\r\n    if (AirConditionerSoundEffect.paused === true) {\r\n      AirConditionerSoundEffect.volume = 0;\r\n      AirConditionerSoundEffect.loop = true;\r\n      AirConditionerSoundEffect.play();\r\n    }\r\n\r\n    setIsOpen(true);\r\n    volumeFadeIn(AirConditionerSoundEffect);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const audioContext = new (window.AudioContext ||\r\n      window.webkitAudioContext)();\r\n\r\n    const source = audioContext.createMediaElementSource(\r\n      AirConditionerSoundEffect\r\n    );\r\n    source.connect(audioContext.destination);\r\n    audioContextRef.current = audioContext;\r\n\r\n    return () => {\r\n      source.disconnect(audioContext.destination);\r\n      audioContext.close();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Root>\r\n      <AirConditioner>\r\n        <Temperature disabled={!isOpen}>\r\n          {isOpen ? temperature : \"00\"}\r\n          <TemperatureSymbol>â„ƒ</TemperatureSymbol>\r\n        </Temperature>\r\n        <Power open={isOpen}>ã€‡</Power>\r\n        <AirOutlet>\r\n          <Shutter open={isOpen} />\r\n        </AirOutlet>\r\n      </AirConditioner>\r\n\r\n      <ButtonGroup>\r\n        <PowerButton onClick={toggleOpen}>ðŸ”´</PowerButton>\r\n        <AddButton onClick={add}>âž•</AddButton>\r\n        <MinusButton onClick={minus}>âž–</MinusButton>\r\n      </ButtonGroup>\r\n    </Root>\r\n  );\r\n}\r\n\r\nconst Root = styled.div`\r\n  max-width: 600px;\r\n  height: 100vh;\r\n  background: #fff;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst AirConditioner = styled.div`\r\n  width: calc(100% - 48px);\r\n  min-width: 320px;\r\n  max-width: 460px;\r\n  height: 120px;\r\n  border: 3px lightgray solid;\r\n  margin: 24px auto;\r\n  border-radius: 6px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  position: relative;\r\n  box-shadow: 4px 6px 12px #808080cc;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr 1fr;\r\n  height: 200px;\r\n  gap: 24px;\r\n  padding: 42px 24px 0;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Temperature = styled.div<{ disabled: boolean }>`\r\n  padding: 0 24px;\r\n  font-family: \"DigitalDisplay\";\r\n  font-size: 24px;\r\n  color: var(--color-blue);\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  text-shadow: 0 0 2px;\r\n  transition: color 0.5s ease-out;\r\n\r\n  ${({ disabled }) =>\r\n    disabled &&\r\n    `\r\n    color: lightgray;\r\n    text-shadow: none;\r\n  `}\r\n`;\r\n\r\nconst TemperatureSymbol = styled.div`\r\n  font-size: 12px;\r\n  position: relative;\r\n  top: -2px;\r\n  margin-left: 2px;\r\n`;\r\n\r\nconst Power = styled.div<{ open: boolean }>`\r\n  position: absolute;\r\n  right: 12px;\r\n  bottom: 6px;\r\n  color: lightgray;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  transition: color 0.5s ease-out;\r\n\r\n  ${({ open }) =>\r\n    open &&\r\n    `\r\n     color: var(--color-blue);\r\n     text-shadow: 0 0 4px;\r\n  `};\r\n`;\r\n\r\nconst PowerButton = styled(Button)`\r\n  grid-column-start: 1;\r\n  grid-column-end: 3;\r\n`;\r\n\r\nconst AddButton = styled(Button)``;\r\nconst MinusButton = styled(Button)`\r\n  grid-column-start: 3;\r\n`;\r\n\r\nconst AirOutlet = styled.div`\r\n  height: 20px;\r\n  background: #333;\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 80%;\r\n  margin-left: 16px;\r\n  border-radius: 2px 2px 0 0;\r\n  perspective: 900px;\r\n`;\r\n\r\nconst Shutter = styled.div<{ open: boolean }>`\r\n  height: 18px;\r\n  background: #f8f8f8;\r\n  border-radius: 2px 2px 0 0;\r\n  margin: 2px 2px 0;\r\n  transform: rotateX(0deg);\r\n  transform-style: preserve-3d;\r\n  transform-origin: 0 16px;\r\n  border: 1px solid lightgray;\r\n  transition: transform ${powerOnTime}s linear;\r\n\r\n  ${({ open }) =>\r\n    open &&\r\n    `\r\n    transform: rotateX(-160deg);\r\n  `}\r\n`;\r\n\r\nexport default App;\r\n","export const powerOnTime = 5;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n   :root{\r\n       --color-blue: #87d7f6;\r\n   }\r\n\r\n   @font-face {\r\n       font-family: 'DigitalDisplay';\r\n       src: url('/assets/Digital_Display.woff2') format('woff2');\r\n   }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport GlobalStyle from \"GlobalStyle\";\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}